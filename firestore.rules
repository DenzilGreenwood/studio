
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    match /{document=**} {
      allow read, write: if false;
    }

    match /users/{userId} {
      allow read, update, create, delete: if isOwner(userId);
    }

    match /users/{userId}/recovery/{recoveryId} {
      allow read, create, update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }

    match /users/{userId}/sessions/{sessionId} {
      allow read, write, delete: if isOwner(userId);
    }

    match /users/{userId}/sessionReports/{sessionReportId} {
      allow read, write, delete: if isOwner(userId);
    }

    match /users/{userId}/journals/{journalId} {
      allow read, write, delete: if isOwner(userId);
    }

    match /users/{userId}/journals/{journalId}/messages/{messageId} {
      allow read, write, delete: if isOwner(userId);
    }

    match /clarityMaps/{clarityMapId} {
      allow read, write, delete: if request.auth != null && 
                                  resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
                    request.resource.data.userId == request.auth.uid;
    }

    match /insightReports/{insightReportId} {
      allow read, write, delete: if request.auth != null && 
                                  resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
                    request.resource.data.userId == request.auth.uid;
    }

    match /users/{userId}/clean-reports/{reportId} {
      allow read, write, delete: if isOwner(userId);
    }

    match /users/{userId}/sessions/{sessionId}/messages/{messageId} {
      allow read, write, delete: if isOwner(userId);
    }

    match /feedback/{feedbackId} {
      allow create: if request.auth != null;
      allow delete: if request.auth != null &&
                    resource.data.userId == request.auth.uid;
      allow read: if request.auth != null &&
                  request.auth.token.admin == true;
      allow update: if false;
    }

    match /system/userCount {
      allow read: if true;
      allow write, create, update: if true;
    }
  }
}
