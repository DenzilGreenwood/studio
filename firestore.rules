rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAdmin() {
      return request.auth != null && 
             request.auth.uid != null &&
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // USER DATA
    match /users/{userId} {
      allow read, create, update, delete: if isOwner(userId) || isAdmin();
    }

    match /users/{userId}/{document=**} {
      allow read, write: if isOwner(userId) || isAdmin();
    }
    
    // RECOVERY DATA
    match /recovery/{userId} {
        allow read, create, update, delete: if isOwner(userId) || isAdmin();
    }

    // FEEDBACK (users can submit, admins can read)
    match /feedback/{feedbackId} {
        allow create: if request.auth != null; // User must be logged in to submit feedback
        allow read: if isAdmin();
        allow update, delete: if false; // Feedback is immutable once submitted
    }
    
    // INTERESTED USERS (public write for sign-up form)
    match /interested_users/{docId} {
      allow create: if true; // Anyone can sign up for the notification list
      allow read, update, delete: if isAdmin(); // Only admins can manage the list
    }
    
    // SYSTEM DATA
    match /system/userCount {
        allow read: if true;
        allow write: if true; // Allow server-side operations during signup
    }
  }
}
