rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin status based on a field in the user's profile
    function isAdmin(userId) {
      return exists(/databases/$(database)/documents/users/$(userId)) &&
             get(/databases/$(database)/documents/users/$(userId)).data.isAdmin == true;
    }

    // User Profiles:
    // Users can read/write their own profile. Admins can read anyone's profile.
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
      allow get: if isAdmin(request.auth.uid);
    }

    // This is the critical rule for the Session History page (and Admin page).
    // It allows collection group queries on 'sessions' for the data owner or an admin.
    match /{path=**}/sessions/{sessionId} {
      allow get, list: if request.auth.uid == resource.data.userId || isAdmin(request.auth.uid);
    }

    // Sessions & Messages (for direct access by path):
    // Users can access their own data. Admins can access anyone's data.
    match /users/{userId}/sessions/{sessionId} {
      // Allow full access for the user who owns the data
      allow read, write: if request.auth.uid == userId;
      // Allow read-only access for admins
      allow get, list: if isAdmin(request.auth.uid);

      match /messages/{messageId} {
        allow read, write: if request.auth.uid == userId;
        allow get, list: if isAdmin(request.auth.uid);
      }
    }

    // Feedback:
    // Any authenticated user can create feedback. Admins can read all feedback.
    match /feedback/{feedbackId} {
      allow create: if request.auth != null;
      allow read: if isAdmin(request.auth.uid);
    }
  }
}
