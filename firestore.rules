rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      // IMPORTANT: Replace with actual admin UIDs from your Firebase project
      return request.auth.uid in ['REPLACE_WITH_YOUR_ADMIN_UID'];
    }

    // /users/{userId}
    match /users/{userId} {
      // User can create their own doc.
      // User can read/update their own doc.
      // Admin can read any user doc.
      allow create: if request.auth.uid == userId;
      allow read, update: if request.auth.uid == userId || isAdmin();

      // Sessions are nested under a 'circumstances' collection.
      // This rule matches any session document for a given user.
      match /circumstances/{circumstance}/sessions/{sessionId} {
          // A user can read and write to their own sessions.
          // An admin can read any user's session.
          allow read: if request.auth.uid == userId || isAdmin();
          allow write: if request.auth.uid == userId;

          // Messages are nested within a session.
          match /messages/{messageId} {
            // A user can read and write messages in their own sessions.
            // An admin can read messages in any user's session.
            allow read: if request.auth.uid == userId || isAdmin();
            allow write: if request.auth.uid == userId;
          }
      }
    }

    // /feedback/{feedbackId}
    match /feedback/{feedbackId} {
      // Any authenticated user can create feedback.
      allow create: if request.auth.uid != null;
      // Only admins can read feedback.
      allow read: if isAdmin();
      // Users cannot update or delete feedback.
      allow update, delete: if false;
    }
  }
}
